head(all_data)
# Install and load ggplot2 and dplyr
library(dplyr)
library(ggplot2)
# Create a heatmap
ht_map <- ggplot(all_data, aes(x=start.station.latitude, y=start.station.longitude)) +
geom_bin2d() +
stat_bin_2d(binwidth = 0.001)
ht_map
# Create a subset of the data
short_trips <- all_data %>%
filter(tripduration < 900)
short_trips
# Add the age column
short_trips <- short_trips %>%
mutate(age=2020 - birth.year)
short_trips
# Try creating a distance column in your data frame here:
# First install (in console) geosphere package and load into the workspace
# Use the geosphere library to create a distance column
starting_stations <- short_trips %>%
select(start.station.latitude,start.station.longitude)
ending_stations <- short_trips %>%
select(end.station.latitude,end.station.longitude)
short_trips <- short_trips %>%
mutate(distance=distHaversine(starting_stations,ending_stations))
short_trips
# Create the speed column
short_trips <- short_trips %>%
mutate(speed=distance/tripduration)
short_trips
# Use group_by() and summarize() to get the mean speed of each age
average_speed_by_age <- short_trips %>%
group_by(age) %>%
summarize(mean_speed=mean(speed, na.rm = TRUE))
average_speed_by_age
# Install and load ggplot2 to create a line graph of age and mean speed
avg_Spd_Lingrph <- ggplot(average_speed_by_age, aes(x=age,y=mean_speed)) +
geom_line(aes(x=age,y=mean_speed))
avg_Spd_Lingrph
# Filter the data frame to only contain rows where the age is less than 80
age_80 <- average_speed_by_age %>%
filter(age<80)
age_80
avg_Spd_Lingrph_80 <- ggplot(age_80) +
geom_line(aes(x=age,y=mean_speed))
avg_Spd_Lingrph_80
# Add a title and label the axes
avg_Spd_Lingrph_80 <- avg_Spd_Lingrph_80 +
labs(title = "Average Speed of riders below 80 years",
x="Age of Riders", y="Average Speed of Riders")
avg_Spd_Lingrph_80
# Use group_by() again to group by both age and gender
average_speed_by_age_and_gender <- short_trips %>%
group_by(age,gender) %>%
summarize(mean_speed=mean(speed, na.rm = TRUE))
average_speed_by_age_and_gender
# Make a line graph of your new filtered data frame
age_80_gender <- average_speed_by_age_and_gender %>%
filter(age<80)
age_80_gender
avg_Spd_Lingrph_80_gender <- ggplot(age_80_gender) +
geom_line(aes(x=age,y=mean_speed,color = gender)) +
labs(title = "Average Speed of riders below 80 years",
x="Age of Riders", y="Average Speed of Riders")
avg_Spd_Lingrph_80_gender
# Use mutate() and as.factor() to change the gender column into a factor.
age_80_gender <- age_80_gender %>%
mutate(gender=as.factor(gender))
age_80_gender
avg_Spd_Lingrph_80_gender <- ggplot(age_80_gender) +
geom_line(aes(x=age,y=mean_speed,color = gender)) +
labs(title = "Average Speed of riders below 80 years",
x="Age of Riders", y="Average Speed of Riders")
avg_Spd_Lingrph_80_gender
# Filter the data frame to only include genders 1 and 2. Set appropriate labels for the legend
age_80_gender <- age_80_gender %>%
mutate(gender=as.factor(gender)) %>%
filter((gender=="1")|(gender=="2"))
age_80_gender
avg_Spd_Lingrph_80_gender <- ggplot(age_80_gender) +
geom_line(aes(x=age,y=mean_speed,color = gender)) +
labs(title = "Average Speed of riders below 80 years",
x="Age of Riders", y="Average Speed of Riders") +
scale_color_discrete(limits=c("Male Identifying","Female Identifying"))
avg_Spd_Lingrph_80_gender
# Create the age_counts data frame
age_counts <- short_trips %>%
group_by(age,gender) %>%
tally()
age_counts
# Filter and label your graph
age_counts <- short_trips %>%
group_by(age,gender) %>%
filter((gender=="1")|(gender=="2")|(age>100)) %>%
tally()
age_counts
age_gender_stacked <- age_gender_stacked +
labs(title = "Age Distribution by Gender",
x="Age of Riders", y="Count of Riders") +
scale_fill_discrete()
age_gender_stacked
# Create the stacked bar plot
age_gender_stacked <- ggplot(age_counts, aes(x=age,y=n,fill=as.factor(gender)))  +
geom_col()
age_gender_stacked
# Filter and label your graph
age_counts <- short_trips %>%
group_by(age,gender) %>%
filter((gender=="1")|(gender=="2")|(age>100)) %>%
tally()
age_counts
age_gender_stacked <- age_gender_stacked +
labs(title = "Age Distribution by Gender",
x="Age of Riders", y="Count of Riders") +
scale_fill_discrete()
age_gender_stacked
# Filter and label your graph
age_counts <- short_trips %>%
group_by(age,gender) %>%
filter((gender=="1")|(gender=="2")|(age>100)) %>%
tally()
age_counts
age_gender_stacked <- age_gender_stacked +
labs(title = "Age Distribution by Gender",
x="Age of Riders", y="Count of Riders") +
scale_fill_discrete()
age_gender_stacked
# Load the data set into a data frame
all_data <- read.csv("january_trips_subset.csv")
# Investigate the data
head(all_data)
# Install and load ggplot2 and dplyr
library(dplyr)
library(ggplot2)
# Create a heatmap
ht_map <- ggplot(all_data, aes(x=start.station.latitude, y=start.station.longitude)) +
geom_bin2d() +
stat_bin_2d(binwidth = 0.001)
ht_map
# Create a subset of the data
short_trips <- all_data %>%
filter(tripduration < 900)
short_trips
# Add the age column
short_trips <- short_trips %>%
mutate(age=2020 - birth.year)
short_trips
# Try creating a distance column in your data frame here:
# First install (in console) geosphere package and load into the workspace
# Use the geosphere library to create a distance column
starting_stations <- short_trips %>%
select(start.station.latitude,start.station.longitude)
ending_stations <- short_trips %>%
select(end.station.latitude,end.station.longitude)
short_trips <- short_trips %>%
mutate(distance=distHaversine(starting_stations,ending_stations))
short_trips
# Create the speed column
short_trips <- short_trips %>%
mutate(speed=distance/tripduration)
short_trips
# Use group_by() and summarize() to get the mean speed of each age
average_speed_by_age <- short_trips %>%
group_by(age) %>%
summarize(mean_speed=mean(speed, na.rm = TRUE))
average_speed_by_age
# Install and load ggplot2 to create a line graph of age and mean speed
avg_Spd_Lingrph <- ggplot(average_speed_by_age, aes(x=age,y=mean_speed)) +
geom_line(aes(x=age,y=mean_speed))
avg_Spd_Lingrph
# Filter the data frame to only contain rows where the age is less than 80
age_80 <- average_speed_by_age %>%
filter(age<80)
age_80
avg_Spd_Lingrph_80 <- ggplot(age_80) +
geom_line(aes(x=age,y=mean_speed))
avg_Spd_Lingrph_80
# Add a title and label the axes
avg_Spd_Lingrph_80 <- avg_Spd_Lingrph_80 +
labs(title = "Average Speed of riders below 80 years",
x="Age of Riders", y="Average Speed of Riders")
avg_Spd_Lingrph_80
# Use group_by() again to group by both age and gender
average_speed_by_age_and_gender <- short_trips %>%
group_by(age,gender) %>%
summarize(mean_speed=mean(speed, na.rm = TRUE))
average_speed_by_age_and_gender
# Make a line graph of your new filtered data frame
age_80_gender <- average_speed_by_age_and_gender %>%
filter(age<80)
age_80_gender
avg_Spd_Lingrph_80_gender <- ggplot(age_80_gender) +
geom_line(aes(x=age,y=mean_speed,color = gender)) +
labs(title = "Average Speed of riders below 80 years",
x="Age of Riders", y="Average Speed of Riders")
avg_Spd_Lingrph_80_gender
# Use mutate() and as.factor() to change the gender column into a factor.
age_80_gender <- age_80_gender %>%
mutate(gender=as.factor(gender))
age_80_gender
avg_Spd_Lingrph_80_gender <- ggplot(age_80_gender) +
geom_line(aes(x=age,y=mean_speed,color = gender)) +
labs(title = "Average Speed of riders below 80 years",
x="Age of Riders", y="Average Speed of Riders")
avg_Spd_Lingrph_80_gender
# Filter the data frame to only include genders 1 and 2. Set appropriate labels for the legend
age_80_gender <- age_80_gender %>%
mutate(gender=as.factor(gender)) %>%
filter((gender=="1")|(gender=="2"))
age_80_gender
avg_Spd_Lingrph_80_gender <- ggplot(age_80_gender) +
geom_line(aes(x=age,y=mean_speed,color = gender)) +
labs(title = "Average Speed of riders below 80 years",
x="Age of Riders", y="Average Speed of Riders") +
scale_color_discrete(limits=c("Male Identifying","Female Identifying"))
avg_Spd_Lingrph_80_gender
# Create the age_counts data frame
age_counts <- short_trips %>%
group_by(age,gender) %>%
tally()
age_counts
# Create the stacked bar plot
age_gender_stacked <- ggplot(age_counts, aes(x=age,y=n,fill=as.factor(gender)))  +
geom_col()
age_gender_stacked
# Filter and label your graph
age_counts <- short_trips %>%
group_by(age,gender) %>%
filter((gender=="1")|(gender=="2")|(age>100)) %>%
tally()
age_counts
age_gender_stacked <- age_gender_stacked +
labs(title = "Age Distribution by Gender",
x="Age of Riders", y="Count of Riders") +
scale_fill_discrete()
age_gender_stacked
# Filter and label your graph
age_counts <- short_trips %>%
group_by(age,gender) %>%
filter((gender=="1")|(gender=="2")|(age>100)) %>%
tally()
age_counts
age_gender_stacked <- age_gender_stacked +
labs(title = "Age Distribution by Gender",
x="Age of Riders", y="Count of Riders") +
scale_fill_discrete()
age_gender_stacked
# Create the stacked bar plot
age_gender_stacked <- ggplot(age_counts, aes(x=age,y=n,fill=as.factor(gender)))  +
geom_col()
age_gender_stacked
# Filter and label your graph
age_counts_1_2 <- short_trips %>%
group_by(age,gender) %>%
filter((gender=="1")|(gender=="2")|(age>100)) %>%
tally()
age_counts_1_2
age_gender_stacked_1_2 <-  ggplot(age_counts_1_2, aes(x=age,y=n,fill=as.factor(gender)))  +
geom_col()+
labs(title = "Age Distribution by Gender",
x="Age of Riders", y="Count of Riders") +
scale_fill_discrete()
age_gender_stacked_1_2
# Load the data set into a data frame
all_data <- read.csv("january_trips_subset.csv")
# Investigate the data
head(all_data)
# Install and load ggplot2 and dplyr
library(dplyr)
library(ggplot2)
# Create a heatmap
ht_map <- ggplot(all_data, aes(x=start.station.latitude, y=start.station.longitude)) +
geom_bin2d() +
stat_bin_2d(binwidth = 0.001)
ht_map
# Create a subset of the data
short_trips <- all_data %>%
filter(tripduration < 900)
short_trips
# Add the age column
short_trips <- short_trips %>%
mutate(age=2020 - birth.year)
short_trips
# Try creating a distance column in your data frame here:
# First install (in console) geosphere package and load into the workspace
# Use the geosphere library to create a distance column
starting_stations <- short_trips %>%
select(start.station.latitude,start.station.longitude)
ending_stations <- short_trips %>%
select(end.station.latitude,end.station.longitude)
short_trips <- short_trips %>%
mutate(distance=distHaversine(starting_stations,ending_stations))
short_trips
# Create the speed column
short_trips <- short_trips %>%
mutate(speed=distance/tripduration)
short_trips
# Use group_by() and summarize() to get the mean speed of each age
average_speed_by_age <- short_trips %>%
group_by(age) %>%
summarize(mean_speed=mean(speed, na.rm = TRUE))
average_speed_by_age
# Install and load ggplot2 to create a line graph of age and mean speed
avg_Spd_Lingrph <- ggplot(average_speed_by_age, aes(x=age,y=mean_speed)) +
geom_line(aes(x=age,y=mean_speed))
avg_Spd_Lingrph
# Filter the data frame to only contain rows where the age is less than 80
age_80 <- average_speed_by_age %>%
filter(age<80)
age_80
avg_Spd_Lingrph_80 <- ggplot(age_80) +
geom_line(aes(x=age,y=mean_speed))
avg_Spd_Lingrph_80
# Add a title and label the axes
avg_Spd_Lingrph_80 <- avg_Spd_Lingrph_80 +
labs(title = "Average Speed of riders below 80 years",
x="Age of Riders", y="Average Speed of Riders")
avg_Spd_Lingrph_80
# Use group_by() again to group by both age and gender
average_speed_by_age_and_gender <- short_trips %>%
group_by(age,gender) %>%
summarize(mean_speed=mean(speed, na.rm = TRUE))
average_speed_by_age_and_gender
# Make a line graph of your new filtered data frame
age_80_gender <- average_speed_by_age_and_gender %>%
filter(age<80)
age_80_gender
avg_Spd_Lingrph_80_gender <- ggplot(age_80_gender) +
geom_line(aes(x=age,y=mean_speed,color = gender)) +
labs(title = "Average Speed of riders below 80 years",
x="Age of Riders", y="Average Speed of Riders")
avg_Spd_Lingrph_80_gender
# Use mutate() and as.factor() to change the gender column into a factor.
age_80_gender <- age_80_gender %>%
mutate(gender=as.factor(gender))
age_80_gender
avg_Spd_Lingrph_80_gender <- ggplot(age_80_gender) +
geom_line(aes(x=age,y=mean_speed,color = gender)) +
labs(title = "Average Speed of riders below 80 years",
x="Age of Riders", y="Average Speed of Riders")
avg_Spd_Lingrph_80_gender
# Filter the data frame to only include genders 1 and 2. Set appropriate labels for the legend
age_80_gender <- age_80_gender %>%
mutate(gender=as.factor(gender)) %>%
filter((gender=="1")|(gender=="2"))
age_80_gender
avg_Spd_Lingrph_80_gender <- ggplot(age_80_gender) +
geom_line(aes(x=age,y=mean_speed,color = gender)) +
labs(title = "Average Speed of riders below 80 years",
x="Age of Riders", y="Average Speed of Riders") +
scale_color_discrete(limits=c("Male Identifying","Female Identifying"))
avg_Spd_Lingrph_80_gender
# Create the age_counts data frame
age_counts <- short_trips %>%
group_by(age,gender) %>%
tally()
age_counts
# Create the stacked bar plot
age_gender_stacked <- ggplot(age_counts, aes(x=age,y=n,fill=as.factor(gender)))  +
geom_col()
age_gender_stacked
# Filter and label your graph
age_counts_1_2 <- short_trips %>%
group_by(age,gender) %>%
filter((gender=="1")|(gender=="2")|(age>100)) %>%
tally()
age_counts_1_2
age_gender_stacked_1_2 <-  ggplot(age_counts_1_2, aes(x=age,y=n,fill=as.factor(gender)))  +
geom_col()+
labs(title = "Age Distribution by Gender",
x="Age of Riders", y="Count of Riders") +
scale_fill_discrete()
age_gender_stacked_1_2
# Filter and label your graph
age_counts_1_2 <- short_trips %>%
group_by(age,gender) %>%
filter((gender=="1")|(gender=="2")|(age<100)) %>%
tally()
age_counts_1_2
age_gender_stacked_1_2 <-  ggplot(age_counts_1_2, aes(x=age,y=n,fill=as.factor(gender)))  +
geom_col()+
labs(title = "Age Distribution by Gender",
x="Age of Riders", y="Count of Riders") +
scale_fill_discrete()
age_gender_stacked_1_2
# Create the stacked bar plot
age_gender_stacked <- ggplot(age_counts, aes(x=age,y=n,fill=as.factor(gender)))  +
geom_col()
age_gender_stacked
# Filter and label your graph
age_counts_1_2 <- short_trips %>%
group_by(age,gender) %>%
filter((gender=="1")|(gender=="2")|(age<100)) %>%
tally()
age_counts_1_2
age_gender_stacked_1_2 <-  ggplot(age_counts_1_2, aes(x=age,y=n,fill=as.factor(gender)))  +
geom_col()+
labs(title = "Age Distribution by Gender",
x="Age of Riders", y="Count of Riders") +
scale_fill_discrete()
age_gender_stacked_1_2
# Load the data set into a data frame
all_data <- read.csv("january_trips_subset.csv")
# Investigate the data
head(all_data)
# Install and load ggplot2 and dplyr
library(dplyr)
library(ggplot2)
# Create a heatmap
ht_map <- ggplot(all_data, aes(x=start.station.latitude, y=start.station.longitude)) +
geom_bin2d() +
stat_bin_2d(binwidth = 0.001)
ht_map
# Create a subset of the data
short_trips <- all_data %>%
filter(tripduration < 900)
short_trips
# Add the age column
short_trips <- short_trips %>%
mutate(age=2020 - birth.year)
short_trips
# Try creating a distance column in your data frame here:
# First install (in console) geosphere package and load into the workspace
# Use the geosphere library to create a distance column
starting_stations <- short_trips %>%
select(start.station.latitude,start.station.longitude)
ending_stations <- short_trips %>%
select(end.station.latitude,end.station.longitude)
short_trips <- short_trips %>%
mutate(distance=distHaversine(starting_stations,ending_stations))
short_trips
# Create the speed column
short_trips <- short_trips %>%
mutate(speed=distance/tripduration)
short_trips
# Use group_by() and summarize() to get the mean speed of each age
average_speed_by_age <- short_trips %>%
group_by(age) %>%
summarize(mean_speed=mean(speed, na.rm = TRUE))
average_speed_by_age
# Install and load ggplot2 to create a line graph of age and mean speed
avg_Spd_Lingrph <- ggplot(average_speed_by_age, aes(x=age,y=mean_speed)) +
geom_line(aes(x=age,y=mean_speed))
avg_Spd_Lingrph
# Filter the data frame to only contain rows where the age is less than 80
age_80 <- average_speed_by_age %>%
filter(age<80)
age_80
avg_Spd_Lingrph_80 <- ggplot(age_80) +
geom_line(aes(x=age,y=mean_speed))
avg_Spd_Lingrph_80
# Add a title and label the axes
avg_Spd_Lingrph_80 <- avg_Spd_Lingrph_80 +
labs(title = "Average Speed of riders below 80 years",
x="Age of Riders", y="Average Speed of Riders")
avg_Spd_Lingrph_80
# Use group_by() again to group by both age and gender
average_speed_by_age_and_gender <- short_trips %>%
group_by(age,gender) %>%
summarize(mean_speed=mean(speed, na.rm = TRUE))
average_speed_by_age_and_gender
# Make a line graph of your new filtered data frame
age_80_gender <- average_speed_by_age_and_gender %>%
filter(age<80)
age_80_gender
avg_Spd_Lingrph_80_gender <- ggplot(age_80_gender) +
geom_line(aes(x=age,y=mean_speed,color = gender)) +
labs(title = "Average Speed of riders below 80 years",
x="Age of Riders", y="Average Speed of Riders")
avg_Spd_Lingrph_80_gender
# Use mutate() and as.factor() to change the gender column into a factor.
age_80_gender <- age_80_gender %>%
mutate(gender=as.factor(gender))
age_80_gender
avg_Spd_Lingrph_80_gender <- ggplot(age_80_gender) +
geom_line(aes(x=age,y=mean_speed,color = gender)) +
labs(title = "Average Speed of riders below 80 years",
x="Age of Riders", y="Average Speed of Riders")
avg_Spd_Lingrph_80_gender
# Filter the data frame to only include genders 1 and 2. Set appropriate labels for the legend
age_80_gender <- age_80_gender %>%
mutate(gender=as.factor(gender)) %>%
filter((gender=="1")|(gender=="2"))
age_80_gender
avg_Spd_Lingrph_80_gender <- ggplot(age_80_gender) +
geom_line(aes(x=age,y=mean_speed,color = gender)) +
labs(title = "Average Speed of riders below 80 years",
x="Age of Riders", y="Average Speed of Riders") +
scale_color_discrete(limits=c("Male Identifying","Female Identifying"))
avg_Spd_Lingrph_80_gender
# Create the age_counts data frame
age_counts <- short_trips %>%
group_by(age,gender) %>%
tally()
age_counts
# Create the stacked bar plot
age_gender_stacked <- ggplot(age_counts, aes(x=age,y=n,fill=as.factor(gender)))  +
geom_col()
age_gender_stacked
# Filter and label your graph
age_counts_1_2 <- short_trips %>%
group_by(age,gender) %>%
filter((gender=="1")|(gender=="2")|(age<100)) %>%
tally()
age_counts_1_2
age_gender_stacked_1_2 <-  ggplot(age_counts_1_2, aes(x=age,y=n,fill=as.factor(gender)))  +
geom_col()+
labs(title = "Age Distribution by Gender",
x="Age of Riders", y="Count of Riders") +
scale_fill_discrete()
age_gender_stacked_1_2
